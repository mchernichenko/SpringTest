package com.nexign.corona;

import org.reflections.Reflections;

public interface Config {

    /**
     *  Интерфейс для конфигурации конкретной реализации, т.е. по типу интерфуйса подбираем конкретную реализацию.
     *  То есть от конфига зависит какая конкретная реализация будет инстанцирована фабрикой.
     *
     *  Алгоритм подбора конкретной реализации реализуется в конкретном конфигураторе, например, в нашем случае, см. JavaConfig, конкретный класс реализации
     *  ищется в определённом пакете или мапе, переданной в конфигуратор
     *
     * @param interface_type класс интерфейса
     * @param <T> тип интерфейса
     * @return класс, который реализует интерфейс interface_type
     */
    <T> Class<? extends T> getImplClass(Class<T> interface_type);

    Reflections getScanner();

}
